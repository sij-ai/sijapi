{
  "4": {
    "inputs": {
      "ckpt_name": "Other/dreamshaperXL_v21TurboDPMSDE.safetensors"
    },
    "class_type": "CheckpointLoaderSimple",
    "_meta": {
      "title": "Load Checkpoint"
    }
  },
  "6": {
    "inputs": {
      "text": "API_PPrompt",
      "clip": [
        "4",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "7": {
    "inputs": {
      "text": "API_NPrompt",
      "clip": [
        "4",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "8": {
    "inputs": {
      "samples": [
        "16",
        0
      ],
      "vae": [
        "4",
        2
      ]
    },
    "class_type": "VAEDecode",
    "_meta": {
      "title": "VAE Decode"
    }
  },
  "9": {
    "inputs": {
      "filename_prefix": "API_",
      "images": [
        "8",
        0
      ]
    },
    "class_type": "SaveImage",
    "_meta": {
      "title": "Save Image"
    }
  },
  "10": {
    "inputs": {
      "text": "API_SPrompt",
      "clip": [
        "4",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "14": {
    "inputs": {
      "conditioning_1": [
        "6",
        0
      ],
      "conditioning_2": [
        "10",
        0
      ]
    },
    "class_type": "ConditioningCombine",
    "_meta": {
      "title": "Conditioning (Combine)"
    }
  },
  "15": {
    "inputs": {
      "batch_size": 1,
      "width": 1023,
      "height": 1025,
      "resampling": "nearest-exact",
      "X": 0,
      "Y": 0,
      "Z": 0,
      "evolution": 0,
      "frame": 0,
      "scale": 5,
      "octaves": 8,
      "persistence": 1.5,
      "lacunarity": 2,
      "exponent": 4,
      "brightness": 0,
      "contrast": 0,
      "clamp_min": 0,
      "clamp_max": 1,
      "seed": 648867523029843,
      "device": "cpu",
      "optional_vae": [
        "4",
        2
      ],
      "ppf_settings": [
        "17",
        0
      ]
    },
    "class_type": "Perlin Power Fractal Latent (PPF Noise)",
    "_meta": {
      "title": "Perlin Power Fractal Noise ðŸ¦š"
    }
  },
  "16": {
    "inputs": {
      "seed": 863091325074880,
      "steps": 10,
      "cfg": 8,
      "sampler_name": "dpmpp_2m_sde",
      "scheduler": "karras",
      "start_at_step": 0,
      "end_at_step": 10000,
      "enable_denoise": "false",
      "denoise": 1,
      "add_noise": "enable",
      "return_with_leftover_noise": "disable",
      "noise_type": "brownian_fractal",
      "noise_blending": "cuberp",
      "noise_mode": "additive",
      "scale": 1,
      "alpha_exponent": 1,
      "modulator": 1,
      "sigma_tolerance": 0.5,
      "boost_leading_sigma": "false",
      "guide_use_noise": "true",
      "model": [
        "4",
        0
      ],
      "positive": [
        "14",
        0
      ],
      "negative": [
        "7",
        0
      ],
      "latent_image": [
        "15",
        0
      ],
      "ppf_settings": [
        "17",
        0
      ],
      "ch_settings": [
        "18",
        0
      ]
    },
    "class_type": "Power KSampler Advanced (PPF Noise)",
    "_meta": {
      "title": "Power KSampler Advanced ðŸ¦š"
    }
  },
  "17": {
    "inputs": {
      "X": 0,
      "Y": 0,
      "Z": 0,
      "evolution": 0,
      "frame": 0,
      "scale": 5,
      "octaves": 8,
      "persistence": 1.5,
      "lacunarity": 2,
      "exponent": 4,
      "brightness": 0,
      "contrast": 0
    },
    "class_type": "Perlin Power Fractal Settings (PPF Noise)",
    "_meta": {
      "title": "Perlin Power Fractal Settings ðŸ¦š"
    }
  },
  "18": {
    "inputs": {
      "frequency": 320,
      "octaves": 12,
      "persistence": 1.5,
      "num_colors": 16,
      "color_tolerance": 0.05,
      "angle_degrees": 45,
      "brightness": 0,
      "contrast": 0,
      "blur": 2.5
    },
    "class_type": "Cross-Hatch Power Fractal Settings (PPF Noise)",
    "_meta": {
      "title": "Cross-Hatch Power Fractal Settings ðŸ¦š"
    }
  }
}