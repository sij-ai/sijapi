#──────────────────────────────────────────────────────────────────────────────────
#                     C O N F I G U R A T I O N     F I L E                        
#──────────────────────────────────────────────────────────────────────────────────
#                                                                                  
#  Hi friend! You've found my hidden .env example file. Do you like Zalgo
#  text and old-school ASCII art? I bet you do. So listen, this'll be your method
#  for configuring sijapi, and nothing works until you at least:
#                                                                                  
#    (1) fill in the ESSENTIALS category, and                                      
#                                                                                  
#    (2) rename this file `.env'                                          
#                                                                                  
#  ... and even then, certain features will not work until you set other          
#  relevant variables below.                                                      
#                                                                                 
#  So get yourself a beverage, put on some sick beats, and settle in for a vibe-y 
#  configuration sesh. Remember to read my detailed notes if you ever feel lost,   
#  and most important, remember:                                                   
#                                                                                  
#           †  you are NOT alone,                                                   
#           †  I love you SO much,                                                  
#           †  and you are S̸̢̟̑̒̊ͅō̸͔͕͎̟͜ worthy.                                      
#                                                                                  
#                    y o u r   b f & b f 4 e ,                                    
#          .x+=:.       .                                              .           
#         z`    ^%     @88>      ..                                  †††>          
#            .   <k    %8P      888>                 .d``            %†P           
#          .@8Ned8"     .       "8P          u       @8Ne.   .u       .            
#        .@^%8888"    .@88u      .        us888u.    %8888:u@88N    .@88u          
#       x88:  `)8b.  ''888E`   u888u.  .@88 "8888"    `888I  888.  ''888E`         
#   ~   8888N=*8888    888E   `'888E   9888  9888      888I  888I    888E          
#        %8"    R88    888E     888E   9888  9888      888I  888I    888E          
#         @8Wou 9%     888E     888E   9888  9888    uW888L  888'    888E          
#       .888888P`      888&     888E   9888  9888   '*88888Nu88P     888&          
#       `   ^"F        R888"    888E   "888*""888" ~  '88888F`       R888"         
#                       ""      888E    ^Y"   ^Y'      888 ^          ""           
#                               888E                   *8E                         
#                               888P                   '8>                   
#                             .J88" "                   "                         
#                                                                               
#                                                                                  
#                         B U T   I   H E A R   Y O U :                            
#                L E T ' S   T A K E   I T   S  L  O  W   A N D                    
#         ─────────────   S̢͉̺ T̪͔͓ A͇̞ R̘͕͙ T̢̡͉   W͚̻ I͉͇͜ T̟͖̺ H̡͚͙   T̺̞̠ H̢̢̙ E̢̪͓  ──────────────  
#                                                                                  
#  ███████╗███████╗███████╗███████╗███╗   ██╗████████╗██╗ █████╗ ██╗     ███████╗  
#  ██╔════╝██╔════╝██╔════╝██╔════╝████╗  ██║╚══██╔══╝██║██╔══██╗██║     ██╔════╝  
#  █████╗  ███████╗███████╗█████╗  ██╔██╗ ██║   ██║   ██║███████║██║     ███████╗  
#  ██╔══╝  ╚════██║╚════██║██╔══╝  ██║╚██╗██║   ██║   ██║██╔══██║██║     ╚════██║  
#  ███████╗███████║███████║███████╗██║ ╚████║   ██║   ██║██║  ██║███████╗███████║  
#  ╚══════╝╚══════╝╚══════╝╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝  
#        ─────────────────────────────────────────────────────────────────         
#                                                                                  
#─── first, bind an ip address and port : ──────────────────────────────────────────
     # <--- replace with base URL of reverse proxy, etc
#─── notes: ──────────────────────────────────────────────────────────────────────
#                                                                                   
#   HOST_NET† and HOST_PORT comprise HOST and determine the ip and port the server binds to.
#   API.URL is used to assemble URLs, e.g. in the MS authentication flow and for serving images generated on the img router.
#   API.URL should match the base URL used to access sijapi sans endpoint, e.g. http://localhost:4444 or https://api.sij.ai 
#                            
#   † Take care here! Please ensure you understand the implications of setting HOST_NET to anything besides 127.0.0.1, and configure your firewall and router appropriately if you do. Setting HOST_NET to 0.0.0.0, for instance, opens sijapi to any device the server running it is accessible to — including potentially frightening internet randos (depending how your firewall, router, and NAT are configured). 
#                                                                                   
#  Here are a few options to consider to more securely enable access from 
#  other devices:      
#                                                                                 
#        (1) if all access can occur over Tailscale, either:
#                (a) leave HOST_NET set to 127.0.0.1, run `tailscale cert $(tailscale 
#                    whois $(tailscale ip | head -n 1)  | awk '/Name:/ {print $2}') 
#                    if you haven't already issued yourself a TLS certificate on 
#                    Tailscale, and then run  `tailscale serve --bg --https=4443 
#                    4444` to expose sijapi to your other tailscale-enabled devices 
#                    at `https://{device.magicdns-domain.net:4443`}; or
#                (b) set HOST_NET to  your server's Tailscale IP (this should work
#                    but for me doesn't reliably)
#                                                                                 
#        (2) if WAN access truly is required, leave HOST_NET set to 127.0.0.1 and 
#            configure either:
#                (a) a Cloudflare tunnel, or 
#                (b) a reverse proxy with HTTPS (Caddy is excellent for this). 
#                                                                                  
#  And please be sure to set a strong API key either way but especially for (2).
#                                 ──────────                                       
#                                                                                  
#──── configure API key authorization and select exemptions──────────────────begin
GLOBAL_API_KEY=¿SECRET?                   # <--- specify a key to unlock the API
PUBLIC_SERVICES=/id,/ip,/health,/img/,/cl/dockets,/cl/search,/cd/alert
TRUSTED_SUBNETS=127.0.0.1/32,10.13.37.0/24,100.64.64.0/24
#─── notes: ───────────────────────────────────────────────────────────────────end
#                                                                                  
#   GLOBAL_API_KEY determines the API key that will be required to access all endpoints, except access to PUBLIC_SERVICES or from TRUSTED_SUBNETS. Authentication is made via an `Authorization: Bearer {GLOBAL_API_KEY}` header.
#   TRUSTED_SUBNETS might commonly include 127.0.0.1/32 (localhost), 100.x.x.0/24 (Tailscale tailnet), and/or 192.168.x.0/24 or 10.x.x.0/24 (local network).
#   When configuring a reverse proxy or Cloudflare tunnel, please verify traffic through it does not appear to sijapi (i.e. in ./logs) as though it were coming from any of the subnets specified here. For sij, using Caddy, it does not, but your setup may differ.
#                                 ──────────                                       
#                                                                                  
#─── router selection: ────────────────────────────────────────────────────────────
ROUTERS=asr,cal,cf,email,health,llm,loc,note,rag,img,serve,time,tts,weather
UNLOADED=ig
#─── notes: ──────────────────────────────────────────────────────────────────────
#                                                                                  
#   ROUTERS determines which routers are loaded.† 
# 
#   UNLOADED is not used directly -- it's just there to help keep track which routers are disabled.
#                                                                                  
#   † ┓ ┏ orth bearing in mind: some routers inherently rely on other routers, 
#     ┃┃┃ 3rd party APIs, or other apps being installed locally. If a router is 
#     ┗┻┛ set to load (i.e. is included in ROUTERS) and it depends on another router, 
#     that other router will also load too irrespective of whether it's listed.      
#                                                                             
#                 B U T   L E T ' S   G E T   D O W N   T O
#                 Ｂ Ｒ Ａ Ｓ Ｓ   Ｔ Ａ Ｃ Ｋ Ｓ ,   S H A L L   W E ?
#                                                                              
#         asr:  requires faster_whisper — $ pip install faster_whisper — and      
#               downloading the model file specified in ASR_DEFAULT_MODEL.        
#                                                                                                          
#         cal:  requires (1) a Microsoft 365 account with a properly configured   
#               Azure Active Directory app, and/or (2) Calendars on macOS. 
#                                                                                  
#          cf:  interfaces with the Cloudflare API and Caddy to register new   
#               [sub-]domains on Cloudflare and deploy them with Caddy as 
#               reverse proxy.           
#                                                                               
#        llm:  requires ollama — $ pip install ollama — and downloading the      
#              models set in LLM_DEFAULT_MODEL and LLM_VISION_MODEL.             
#                                                                               
#      email:  email auto-responders and summarizers to be found here. Designed
#              for use with IMAP.
#                                                                               
#      hooks:  designed for two specific use cases: monitoring court dockets    
#              through CourtListener.org, and monitoring arbitrary web pages for 
#              changes in tandem with a self-hosted changedetection.io instance. 
#              Both require accounts; other functionality would require 
#              additional / modified code.
#                                                                                
#         ig:  requires an Instagram account, with credentials and other settings
#              configured separately in the ig_config.json file; relies heavily
#              on the llm and img routers which have their own dependencies.   
#                                                                                  
#        loc:  some endpoints work as is, but the core location tracking 
#              functionality requires Postgresql + PostGIS extension and are
#              designed specifically to pair with a mobile device where 
#              Pythonista is installed and configured to run the
#             `gps_tracker.py` and `gps_upload.py` scripts periodically or per
#              repeating conditionwy (e.g. via automation under Apple Shortcuts).         
#                                                                                 
#       note:  designed for use with Obsidian plus the Daily Notes and Tasks 
#              core extensions; and the Admonitions, Banners, Icons (with the 
#              Lucide pack), and Make.md community extensions. Moreover `notes`
#              relies heavily on the cal, llm, loc, img, summarize, time, loc, 
#              and weather routers and accordingly on the external 
#              dependencies of each.
#                                                                                  
#         img:  requires ComfyUI plus any modules and StableDiffusion models 
#              set in sd_config and individual workflow .json files.        
#                                                                                 
#  summarize:  relies on the llm router and thus requires ollama.
#  
#       time:  requires the subscription-based macOS app 'Timing' (one of many
#              apps that together make SetApp an incredible value for macOS users!)
#                                                                                  
#        tts:  designed for use with coqui — $ pip install coqui — and/or the 
#              ElevenLabs API.
#  
#    weather:  requires a VisualCrossing API key and is designed for (but doesn't
#              itself strictly require) Postgresql with the PostGIS extension; 
#              (... but it presently relies on the loc router, which does).
#                                                                                    
#                                                                                    
#     ... Whew! that was a lot, right? I'm so glad we're in this together...         
#                                   ──────────                                        
#                                    
#─────────  W H A T   A R E   Y O U R   D I G I T S ,   H O N E Y   B U N ?  ────────
# LOCALIZATION
#─── what are your digits, honey-bun?: ──────────────────────────────────────────────
TZ=America/Los_Angeles
HOME_ZIP=97401
#─── notes: ─────────────────────────────────────────────────────────────────────────
#
#                                   ──────────                                        
#                                    
#───────────────────────  Y ₒ ᵤ ' ᵣ ₑ   G ₒ ₙ ₙ ₐ   ₗ ₒ ᵥ ₑ ────────────────────────
#                                                                                   
# ░        ░░      ░░        ░  ░░░░░░░░      ░░░      ░░░      ░░  ░░░░░░░        ░
# ▒▒▒▒  ▒▒▒▒  ▒▒▒▒  ▒▒▒▒  ▒▒▒▒  ▒▒▒▒▒▒▒  ▒▒▒▒▒▒▒  ▒▒▒▒  ▒  ▒▒▒▒  ▒  ▒▒▒▒▒▒▒  ▒▒▒▒▒▒▒
# ▓▓▓▓  ▓▓▓▓  ▓▓▓▓  ▓▓▓▓  ▓▓▓▓  ▓▓▓▓▓▓▓▓      ▓▓  ▓▓▓▓▓▓▓  ▓▓▓▓  ▓  ▓▓▓▓▓▓▓      ▓▓▓
# ████  ████        ████  ████  █████████████  █  ████  █        █  ███████  ███████
# ████  ████  ████  █        █        ██      ███      ██  ████  █        █        █
#                                                                                   
#                A N D   I ' M   N O T.   E V E N.   J E A L O U S.                 
#            Y O U   D E S E R V E   I T   A L L ,   B A B Y C A K E S.             
#                                                                                   
#─── use tailscale for secure remote access: ───────────────────────────────────────
TS_IP=100.13.37.5            # <--- enter your own TS IP address
TS_SUBNET=100.13.37.0/24     # <--- enter your own TS subnet (IPv4/CIDR)
TS_ID=¿SECRET?               # <--- enter your own TS device name
TS_TAILNET=screaming_sailfin # <--- enter your own TS tailnet / MagicDNS name
TAILSCALE_API_KEY=¿SECRET?   # <--- enter your own TS API key
#─── notes: ────────────────────────────────────────────────────────────────────────
#
#   TS_IP should match the Tailscale IP of the device. But this is deprecated, and if the functionality becomes relevant again, it should be come back in the form of a dynamic check (`tailscale status` in a shell subprocess) in __init__.py or even the /id endpoint.
#   TS_SUBNET should match the IP/CIDR-format tailnet
#   TS_ID currently has two roles: it's used to assemble the complete MagicDNS of the server, and it determines what the /id endpoint on the health router returns. This is relevant where multiple servers run the script behind a load balancer (e.g. Caddy), as a means to check which server responds. Bear in mind that /id is NOT API key-protected by default here.
#   TS_TAILNET should match the tailnet's MagicDNS domain (omitting the `.net`, for reasons)
#                                   ──────────                                        
#                                                                                     
#──────────── ᵁ   &   ᴹ ᴱ ,  W E   C A N   G E T   T H R O U G H ────────────────────
#                                                                                     
#       ██▓███  ▒█████    ██████ ▄▄▄█████▓  ▄████  ██▀███  ▓█████   ██████            
#      ▓██░  ██▒██▒  ██▒▒██    ▒ ▓  ██▒ ▓▒ ██▒ ▀█▒▓██ ▒ ██▒▓█   ▀ ▒██    ▒            
#      ▓██░ ██▓▒██░  ██▒░ ▓██▄   ▒ ▓██░ ▒░▒██░▄▄▄░▓██ ░▄█ ▒▒███   ░ ▓██▄              
#      ▒██▄█▓▒ ▒██   ██░  ▒   ██▒░ ▓██▓ ░ ░▓█  ██▓▒██▀▀█▄  ▒▓█  ▄   ▒   ██▒           
#      ▒██▒ ░  ░ ████▓▒░▒██████▒▒  ▒██▒ ░ ░▒▓███▀▒░██▓ ▒██▒░▒████▒▒██████▒▒           
#      ▒██▒ ░  ░ ▒░▒░▒░ ▒ ▒▓▒ ▒ ░  ▒ ░░    ░▒   ▒ ░ ▒▓ ░▒▓░░░ ▒░ ░▒ ▒▓▒ ▒ ░           
#      ▒▓▒░      ░ ▒ ▒░ ░ ░▒  ░ ░    ░      ░   ░   ░▒ ░ ▒░ ░ ░  ░░ ░▒  ░ ░           
#      ░▒      ░ ░ ░ ▒  ░  ░  ░    ░      ░ ░   ░   ░░   ░    ░   ░  ░  ░             
#      ░░          ░ ░T̷ O̷ G̷ E̷ T̷ H̷ ░ R̷.        ░    ░        ░  ░      ░             
#                                           Ｊ Ｕ Ｓ Ｔ              ░             
#─── frag, or weat,and loc modules:──────  Ｈ Ｏ Ｌ Ｄ   Ｍ Ｙ   Ｈ Ａ Ｎ Ｄ.
DB_NAME=db                                                                      
#                                                              
DB_HOST=127.0.0.1                                                                   
DB_PORT=5432                                                                        
#                                                   R E A L   T I G H T.  
DB_USER=postgres                                                                         
DB_PASSWORD=¿SECRET?          # <--- enter your own Postgres password'                                                                  
#                                         Y E A H . . .                                 
DB_SSH=100.64.64.15                                                                 
#                                                 . . . 𝙹 𝚄 𝚂 𝚃   𝙻 𝙸 𝙺 𝙴   𝚃 𝙷 𝙰 𝚃. 
DB_SSH_USER=sij                                                                       
DB_SSH_PASS=¿SECRET?          # <--- enter SSH password for pg server (if not localhost)
#─── notes: ──────────────────────────────────────────────────  S E E ?   𝕰 𝖅 - 𝕻 𝖅
#                                                                                   
#   DB, DB_HOST, DB_PORT, DB_USER, and DB_PASS should specify those respective      
#   credentials for your Postgres database. DB_SSH and associated _USER and _PASS   
#   variables allow database access over an SSH tunnel.                             
#                                                                                   
#   In the current implementation, we rely on Postgres to hold:                     
#       i.  user-logged location data (loc module), and                          
#      ii.  results from past weather forecast checks (weather module).             
#                                                                                     
#   A future version will hopefully make use of PostGIS's geocoding capabilities,     
#   and add a vector database for the LLM module. Until then it's up to you if the    
#   loc and weather modules are worth the hassle of maintaining Postgres.          
#                                   ──────────                                        
#                                                                                     
#───────────────────────────────   𝐼   𝐵 𝐸 𝑇   𝑌 𝑂 𝑈   ─────────────────────────────────
#        𝑅 𝐸 𝐶 𝐸 𝐼 𝑉 𝐸   𝐴   𝐿 𝑂 𝑇   𝑂 𝐹   𝐿 𝑂 𝑉 𝐸   𝐿 𝐸 𝑇 𝑇 𝐸 𝑅 𝑆   𝑂 𝑉 𝐸 𝑅   
#                                                                                         
#       .----------------. .----------------. .----------------. .----------------.       
#     | .--------------. | .--------------. | .--------------. | .--------------. |       
#     | |     _____    | | | ____    ____ | | |      __      | | |   ______     | |       
#     | |    |_   _|   | | ||_   \  /   _|| | |     /  \     | | |  |_   __ \   | |       
#     | |      | |     | | |  |   \/   |  | | |    / /\ \    | | |    | |__) |  | |       
#     | |      | |     | | |  | |\  /| |  | | |   / ____ \   | | |    |  ___/   | |       
#     | |     _| |_    | | | _| |_\/_| |_ | | | _/ /    \ \_ | | |   _| |_      | |       
#     | |    |_____|   | | ||_____||_____|| | ||____|  |____|| | |  |_____|     | |       
#     | |              | | |              | | |              | | |              | |       
#     | '--------------' | '--------------' | '--------------' | '--------------' |       
#      '----------------' '----------------' '----------------' '----------------'        
#                                                                                         
#                                      𝙴 𝙼 𝙰 𝙸 𝙻                                        
#                                                                                         
#─── imap & smtp: ────────────────────────────────────────────────────────────────────────
IMAP_HOST=127.0.0.1
IMAP_EMAIL=¿SECRET?              # <--- enter yours
IMAP_PASSWORD=¿SECRET?           # <--- enter yours
IMAP_PORT=1142
IMAP_ENCRYPTION=STARTTLS
SMTP_PORT=1024
SMTP_ENCRYPTION=SSL  
AUTORESPONSE_WHITELIST=¿SECRET?  # <--- enter complete/fragmented emails, or keywords
AUTORESPONSE_BLACKLIST=¿SECRET?  # <--- same deal-io
AUTORESPONSE_CONTEXT=¿SECRET?    # <--- inform the LLM why it's auto-responding for you'
USER_FULLNAME=¿SECRET?           # <--- more context for the LLM
USER_BIO=¿SECRET?                # <--- yet more context for the nosy LLM
#─── notes: ───────────────────────────────────────────────────────────────────────────────
#                                                                                          
#   This is primarily for summarizing incoming emails. Any IMAP account should work, but   
#   I focused testing on a somewhat complex setup involving Protonmail Bridge.             
#                                                                                         
#                                      ──────────                                         
#                                                                                         
#                                                                                         
#─── ms365 (calendars): ──────────────────────────────────────────────────────────────
ICAL_TOGGLE=True
ICALENDARS='E68FE085-2ECA-4097-AF0A-8D38C404D8DA,AB5A0473-16DD-4916-BD6D-F12AC2455285'
MS365_TOGGLE=False
MS365_CLIENT_ID=¿SECRET?          # <--- enter your client ID (found in Azure pane)
MS365_TENANT_ID=¿SECRET?          # <--- enter your tenant ID (found in Azure pane)
MS365_SECRET=¿SECRET?             # <--- enter your app secret (found in Azure pane)
MS365_SCOPE='basic,calendar_all,Calendars.Read,Calendars.ReadWrite,offline_access'
MS365_TOKEN_FILE=oauth_token.txt
MS365_LOGIN_URL='https://login.microsoftonline.com'
MS365_REDIRECT_PATH=¿SECRET?      # <--- e.g. http://localhost:4444/MS365/oauth_redirect
#─── notes: ───────────────────────────────────────────────────────────────────────────────
#                                                                                          
#   # MS365_CLIENT_ID, _TENANT_ID, _SECRET, AND _SCOPES must be obtained from Microsoft 
#   via the Azure portal, by creating a new app registration and an accompanying secret.
#   MS365_THUMBPRINT is vestige of an earlier failed attempt to get this working, and
#   for now is deprecated. I recommend seeking out a well-reviewed tutorial for 
#   creating an app on Azure with a client_id and secret and necessary scopes for
#   individual calendar access, because I had one heck of a time trying various approaches.
#                               Do better, Microsoft.   
#                                                                                         
#                                      ──────────                                         
#                                                                                         
#                                                                                         
#────────────────────  L E T ' S   G E T   S I L L Y ,  ─────────────────────────────
#                               T H E N   G O   B͎̝̪̼͉͜ O͖͕͇͚͉̼ N̢̦͖̺͔͎ K̠͓̠͖͜ E̝̼̫̙͔̞ R̡͇͖̙͉͎ S̡͉̠͎͙̪   
#                  W I T H   O U R   O W N                                   
#                                                                                          
#                  ░▒▓█▓▒░        ░▒▓█▓▒░         ░▒▓██████▒▓██████▒░                      
#                  ░▒▓█▓▒░        ░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░                     
#                  ░▒▓█▓▒░        ░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░                     
#                  ░▒▓█▓▒░        ░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░                     
#                  ░▒▓█▓▒░        ░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░                     
#                  ░▒▓█▓▒░        ░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░                     
#                  ░▒▓████████▓▒  ░▒▓████████▓▒  ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░                     
#  
#                                                                                          
#                              ( F O R   R E A L   T H O U G H ,  T H E S E   A R E
#
#─── via comfyui (stable diffusion): ─────── S̝͖̦͓̪̻ O̡͖̘̫͇̟   H̢͔͔̫͉͜ O̢̢͉̞͍̘ T̟͍͍̪̦̞  R I G H T   N O W 
LLM_URL=http://localhost:11434
SYSTEM_MSG=You are a helpful AI assistant.
DEFAULT_LLM=dolphin-mistral
DEFAULT_VISION=llava-llama3
OPENAI_API_KEY=¿SECRET?                # <--- not presently implemented for anything
SUMMARY_MODEL='dolphin-llama3:8b-256k'
SUMMARY_CHUNK_SIZE=16384
SUMMARY_CHUNK_OVERLAP=100
SUMMARY_TPW=1.3
SUMMARY_LENGTH_RATIO=4
SUMMARY_MIN_LENGTH=64
SUMMARY_TOKEN_LIMIT=16384
SUMMARY_INSTRUCT='You are an AI assistant that provides accurate summaries of text -- nothing more and nothing less. You must not include ANY extraneous text other than the sumary. Do not include comments apart from the summary, do not preface the summary, and do not provide any form of postscript. Do not add paragraph breaks. Do not add any kind of formatting. Your response should begin with, consist of, and end with an accurate plaintext summary.'
SUMMARY_INSTRUCT_TTS='You are an AI assistant that summarizes emails -- nothing more and nothing less. You must not include ANY extraneous text other than the sumary. Do not include comments apart from the summary, do not preface the summary, and do not provide any form of postscript. Do not add paragraph breaks. Do not add any kind of formatting. Your response should begin with, consist of, and end with an accurate plaintext summary. Your response will undergo Text-To-Speech conversion and added to Sanjays private podcast. Providing adequate context (Sanjay did not send this question to you, he will only hear your response) but aiming for conciseness and precision, and bearing in mind the Text-To-Speech conversion (avoiding acronyms and formalities), summarize the following.'
DEFAULT_VOICE=joanne
WHISPER_CPP_DIR='whisper.cpp'
WHISPER_CPP_MODELS=tiny,base,base-en,small,medium,medium-en,large-v3
WEBCLIPPER_TTS=elevenlabs
EMAIL_SUMMARY_TTS=local
YEAR_FMT="%Y"
MONTH_FMT="%Y-%m %B"
DAY_FMT="%Y-%m-%d %A"
DAY_SHORT_FMT="%Y-%m-%d"
#─── notes: ──────────────────────────────────────────────────────────────────────────────
#                                                                                         
#   The exact values here will depend on what software you are using to inference an LLM,
#   and of course what models and capabilities are available through it. The script was 
#   designed for use with `ollama`, but most of the functionality should be equal with
#   LM Studio, LocalAI, ect...                                                            
#   
#   DEFAULT_LLM is self-explanatory; DEFAULT_VISION is used for image recognition within
#   a multimodal chat context, such as on the ig module for generating intelligible      
#   comments to Instagram posts, or more realistic captions for img-generated images.     
#   
#   Note it's possible to specify a separate model for general purposes and for 
#   summarization tasks. The other SUMMARY_ variables call for some explanation, 
#   in particular six that are most relevant when summarizing very long documents:
#   
#      SUMMARY_CHUNK_SIZE:  determines the maximum length, in tokens, the pieces that are 
#                           split and sent individually to the model.
#
#   SUMMARY_CHUNK_OVERLAP:  determines how much of each chunk is overlapped with the prior
#                           and next chunks. Set too high causes repetition, set too low
#                           causes misunderstood confusion and poor summary results.
#                           The summarization algorithm is flawed but I've gotten the best
#                           results with this set around 100–200.
#
#             SUMMARY_TPW:  used in estimating the token count of a prompt for purposes of
#                           complying with the maximum tokens a model can handle at once.
#                           Best you can do is estimate. I tend to use long words a fair
#                           excessively and found my average was 1.3 tokens per word. YMMV.
#                                                                                         
#    SUMMARY_LENGTH_RATIO:  this is the primary control over the length of generated 
#                           summaries, expressed as the ratio of original text length to 
#                           summary length. The default, 4, means the summaries will be
#                           around 1/4 the length of the original text you provide it.
#        
#      SUMMARY_MIN_LENGTH:  the default SUMMARY_LENGTH_RATIO of 4 isn't ideal for very
#                           short texts, but setting it any lower sacrifices conciseness
#                           in summaries of longer texts. In short one size doesn't fit
#                           all. The compromise I landed on was to set a "maximum minimum"
#                           summary length: under no circumstances will the script impose
#                           a smaller maximum length than this value.
#                                                                                         
#        SUMMARY_INSTRUCT:  sets the prompt used when summarizing text.
#
#    SUMMARY_INSTRUCT_TTS:  sets a separate prompt for use when summarizing text where
#                           tts output was requested; tends to yield "cleaner" audio 
#                           with less numbers (page numbers, citations) and other 
#                           information extraneous to spoken contexts.
#                           
#           DEFAULT_VOICE:  used for all tts tasks when a specific voice is not requested.
#                                                                                         
#                                      ──────────                                         
#                                                                                         
#                                                                                         
#────,-_/──────────   W E   C A N   E X P E R I M E N T   W I T H   ──────────.───────────
#   '  |  ,~-,-.  ,-.  ,-.  ,--.    |  --' ,--.   ,-.   ,--.  ,-.  ,-.  |--  .  ,-.   ,-. 
# .^  |  |  |  | ,--| |  | | --'   |  -,- | --'  |  |  | --' |    ,--|  |   |  |  |  |  | 
# `--'  '  '  '  `-^  `-|  `--'   `---|   `--'  '  '   `--'  '    `--^  `'  `  `-'  '  '  
#                  ,   |         ,-. |        ~ 𝙸 𝙽   𝚃 𝙷 𝙴   𝙽 𝚄 𝙳 𝙴 . ~                
#                  `~~'          `-+'                                                     
#                                   O R   F U L L Y   C L O T H E D  ──  U P   T O   Y O U
#                                                                                         
#─── via comfyui (stable diffusion): ───── ( B U T   L E T   M E   K N O W ,   Y E A H ? )
COMFYUI_URL=http://localhost:8188
COMFYUI_DIR=/Users/sij/workshop/ComfyUI
COMFYUI_LAUNCH_CMD="mamba activate comfyui && python main.py"
OBSIDIAN_BANNER_SCENE=wallpaper
PHOTOPRISM_USER=NOT_IMPLEMENTED
PHOTOPRISM_PASS=NOT_IMPLEMENTED
ANONYMIZED_TELEMETRY=False
#─── notes: ──────────────────────────────────────────────────────────────────────────────
#                                                                                         
#   COMFY_URL, as you may expect, should point to the URL you use to access ComfyUI. If you 
#   don't know, watch for it in the server logs once ComfyUI is fully launched.           
#                                                                                         
#   COMFYUI_DIR, with similar self-evidence, should point to the base directory of your   
#   ComfyUI installation (i.e. the folder that contains `models`, `inputs`, and `outputs`).
#   It can handle either a 
#   
#   PhotoPrism integration is not yet implemented, so don't bother with that just yet.
#                                     ──────────                                          
#                                                                                         
#  D O N ' T   M I S S   O N E   ───────────────────────────────────────
#\  F I N A L   S M A T T E R I N G   O F   Ⓜ Ⓘ Ⓢ Ⓒ Ⓔ Ⓛ Ⓛ Ⓐ Ⓝ Ⓨ \
# \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\                             
#  \ _ _ _/\\\\_ _ _ _ _ _ /\\\\ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\                
#   \ _ _ \/\\\\\\_ _ _ _ /\\\\\\ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\          
#    \ _ _ \/\\\//\\\_ _ /\\\//\\\ _ _/\\\ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\  
#     \ _ _ \/\\\\///\\\/\\\/ \/\\\ _ _///_ _ _/\\\\\\\\\\_ _ _ _/\\\\\\\\_ _\
#      \ _ _ \/\\\ _\///\\\/ _ \/\\\ _ _/\\\ _ \/\\\////// _ _ _/\\\////// _ _\  
#       \ _ _ \/\\\ _ _\/// _ _ \/\\\ _ _/\\\ _ \/\\\\\\\\\\_ _ /\\\_ _ _ _ _ _\ 
#        \ _ _ \/\\\ _ _ _ _ _ _ \/\\\ _ _/\\\ _ \////////\\\_ _\//\\\ _ _ _ _ _\ 
#         \ _ _ \/\\\ _ _ _ _ _ _ \/\\\ _ _/\\\ _ _/\\\\\\\\\\_ _ \///\\\\\\\\_ _\
#          \ _ _ \///_ _ _ _ _ _ _ \///_ _ _///_ _ \////////// _ _ _ \//////// _ _\  
#           \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\  
#            ───────────────────  A N D   O T H E R   W H A T - H A V E - Y O U S  ──
#                                                                                        
#─── other needful API keys, mainly: ────────────────────────────────────────────────────
CF_API_BASE_URL=¿SECRET?             # <--- Cloudflare API URL
CF_TOKEN=¿SECRET?                    # <--- Cloudflare Token
VISUALCROSSING_BASE_URL='https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline'
VISUALCROSSING_API_KEY=¿SECRET?      # <--- VisualCrossing API key (for Weather)
ELEVENLABS_API_KEY=¿SECRET?          # <--- ElevenLabs API key (for TTS)
COURTLISTENER_BASE_URL='https://www.courtlistener.com'
COURTLISTENER_API_KEY=¿SECRET?       # <--- CourtListener API key (for court docket entries)
TIMING_API_URL='https://web.timingapp.com/api/v1'
TIMING_API_KEY=¿SECRET?              # <--- API key for macOS/web app Timing (time tracking)
PUBLIC_KEY_FILE=sij.asc              # <--- public PGP key (served at /pgp)
MAC_ID=¿SECRET?                      # <--- Tailscale hostname for primary macOS (alerts)
MAC_UN=¿SECRET?                      # <--- Primary macOS username
MAC_PW=¿SECRET?                      # <--- Primary macOS password
#─── notes: ──────────────────────────────────────────────────────────────────────────────
#                                                                                         
#                                                                                         
#                  CF_TOKEN:  a Cloudflare token. This is used on the cf router for quick 
#                             deployment of new domains in tandem with Caddy and for ddns. 
#
#    VISUALCROSSING_API_KEY:  used for obtaining weather forecasts. It is a very data-rich
#                             yet affordable source of weather info, with a generous free 
#                             plan.
#
#        ELEVENLABS_API_KEY:  used when on the tts router if tts tasks are outsourced to 
#                             the state-of-the-art models at ElevenLabs.
#
#     COURTLISTENER_API_KEY:  used primarily on the hooks router, but likely relevant only 
#                             to legal professionals that will be aware what it is for.
# 
#            TIMING_API_URL:  are used on the time router for generating various tasks 
#                   &         related to timekeeping, as well as on the notes router for
#            TIMING_API_KEY:  generating markdown-formatted timeslips. It requires an
#                             active subscription to the Timing app (macOS or web), but 
#                             it's worth noting comes included in the SetApp subscribtion  
#                             bundle, for the same price, last I checked, as subscribing to 
#                             Timing alone. If you have a Mac and somehow don't know this 
#                             already, SetApp is an utterly insane value. I pay $15/mo for 
#                             apps that I would otherwise pay ~$100/mo for if subscribing 
#                             individually. I want to say I wasn't paid to say this, but 
#                             with those savings I almost feel like I was.
#
#                   MAC_ID:   These last three variables are for a specific use case where
#                   MAC_UN:   you want certain commands run, or alerts appearing, on a
#                   MAD_PW:   designated macaOS computer. The alerts router is designed to
#                             deliver OS-level notifications to the specified Mac when a
#                             webhook gets a hit on specified keywords within the payload.
#                             Setting the MAC_ID to the TS_ID of the target Mac, allows 
#                             the script to readily know whether it itself is the target
#                             (this is relevant in a load-balancing context), and how to
#                             reach the target if not — to wit, ssh using MagicDNS.

